// <auto-generated />
using System;
using Kubis1982.Modules.AccessManagement.Persistance.WriteModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Kubis1982.Modules.AccessManagement.Persistance.WriteModel.Migrations
{
    [DbContext(typeof(WriteDbContext))]
    [Migration("20240913213016_InitialDb")]
    partial class InitialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("AcM")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Kubis1982.Modules.AccessManagement.Domain.Users.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("CreatedOn")
                        .HasPrecision(2)
                        .HasColumnType("timestamp(2) with time zone")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("ExpiryDate")
                        .HasPrecision(2)
                        .HasColumnType("timestamp(2) with time zone");

                    b.Property<int?>("KilledBy")
                        .HasColumnType("integer");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasPrecision(2)
                        .HasColumnType("timestamp(2) with time zone")
                        .HasColumnOrder(4);

                    b.Property<string>("TypeId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character(5)")
                        .HasDefaultValue("AcM02")
                        .HasColumnOrder(0)
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("KilledBy");

                    b.ToTable("Sessions", "AcM");
                });

            modelBuilder.Entity("Kubis1982.Modules.AccessManagement.Domain.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(3);

                    b.Property<DateTime?>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(2)
                        .HasColumnType("timestamp(2) with time zone")
                        .HasColumnOrder(2)
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnOrder(7);

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("integer")
                        .HasColumnOrder(5);

                    b.Property<DateTime?>("ModifiedOn")
                        .HasPrecision(2)
                        .HasColumnType("timestamp(2) with time zone")
                        .HasColumnOrder(4);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)")
                        .HasColumnOrder(8);

                    b.Property<string>("TypeId")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("character(5)")
                        .HasDefaultValue("AcM01")
                        .HasColumnOrder(0)
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users", "AcM");
                });

            modelBuilder.Entity("Kubis1982.Modules.AccessManagement.Domain.Users.Session", b =>
                {
                    b.HasOne("Kubis1982.Modules.AccessManagement.Domain.Users.User", null)
                        .WithMany("Sessions")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kubis1982.Modules.AccessManagement.Domain.Users.User", "Killer")
                        .WithMany()
                        .HasForeignKey("KilledBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.OwnsOne("Kubis1982.Modules.AccessManagement.Domain.Users.RefreshToken", "RefreshToken", b1 =>
                        {
                            b1.Property<int>("SessionId")
                                .HasColumnType("integer");

                            b1.Property<DateTime>("ExpiryTime")
                                .HasPrecision(2)
                                .HasColumnType("timestamp(2) with time zone")
                                .HasColumnName("RefreshTokenExpiryDate");

                            b1.Property<string>("Token")
                                .IsRequired()
                                .HasMaxLength(256)
                                .HasColumnType("character varying(256)")
                                .HasColumnName("RefreshToken");

                            b1.HasKey("SessionId");

                            b1.ToTable("Sessions", "AcM");

                            b1.WithOwner()
                                .HasForeignKey("SessionId");
                        });

                    b.Navigation("Killer");

                    b.Navigation("RefreshToken");
                });

            modelBuilder.Entity("Kubis1982.Modules.AccessManagement.Domain.Users.User", b =>
                {
                    b.OwnsOne("Kubis1982.Modules.AccessManagement.Domain.Users.UserFullName", "FullName", b1 =>
                        {
                            b1.Property<int>("UserId")
                                .HasColumnType("integer");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("FirstName")
                                .HasColumnOrder(10);

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("LastName")
                                .HasColumnOrder(12);

                            b1.Property<string>("MiddleName")
                                .IsRequired()
                                .HasMaxLength(20)
                                .HasColumnType("character varying(20)")
                                .HasColumnName("MiddleName")
                                .HasColumnOrder(11);

                            b1.HasKey("UserId");

                            b1.ToTable("Users", "AcM");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("FullName")
                        .IsRequired();
                });

            modelBuilder.Entity("Kubis1982.Modules.AccessManagement.Domain.Users.User", b =>
                {
                    b.Navigation("Sessions");
                });
#pragma warning restore 612, 618
        }
    }
}
